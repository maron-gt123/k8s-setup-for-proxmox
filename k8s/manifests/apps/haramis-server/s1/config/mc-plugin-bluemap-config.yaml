apiVersion: v1
kind: ConfigMap
metadata:
  name: mc-plugin-bluemap-config
data:
  bluemap-core.conf: |
    ##                          ##
    ##         BlueMap          ##
    ##       Core-Config        ##
    ##                          ##
    
    # 下記の設定 (accept-download) を TRUE に変更することで、あなたは Mojang の EULA (https://account.mojang.com/documents/minecraft_eula) に同意したと見なされます。
    # また、Minecraft (Java Edition) のライセンスを所有していることを確認し、
    # BlueMap が Mojang のサーバー (https://piston-meta.mojang.com/) から Minecraft クライアントファイル（Minecraft のバージョンに応じたもの）をダウンロード・利用することに同意することになります。
    # このファイルには Mojang に帰属するリソースが含まれており、再配布したり、EULA に反する利用をしてはいけません。
    # BlueMap はこのファイルのリソースを使用して、マップの 3D モデルを生成し、それにテクスチャを適用します。（これがないと BlueMap は動作しません。）
    accept-download: true
    
    # BlueMap がランタイム中に必要とするデータファイルや、レンダリングの進捗を保存して後で再開できるようにするためのフォルダです。
    # デフォルトは "bluemap" です。
    data: "bluemap"
    
    # BlueMap がマップをレンダリングする際に使用するスレッド数を変更します。
    # 値を大きくするとレンダリング速度が改善しますが、ホストマシンのパフォーマンスに影響を与える可能性があります。
    # 常に使用可能なプロセッサコア数以下に設定してください。
    # 0 または負の値を指定した場合は、利用可能なプロセッサコア数からその値を引いた数が使用されます。
    # （例：6 コアで値を -2 に設定すると、4 つのレンダリングプロセスが動作します）
    # デフォルトは 1 です。
    render-thread-count: 1
    
    # BlueMap がサーバーやワールドのディレクトリから Mod リソースやデータパックを見つけて読み込むかどうかを制御します。
    # デフォルトは true です。
    scan-for-mod-resources: true
    
    # true にすると、BlueMap は非常に基本的な利用状況（使用中の実装タイプとバージョンのみ）を https://metrics.bluecolored.de/bluemap/ に送信する場合があります。
    # これにより開発者は BlueMap の基本的な利用状況を把握でき、開発を続けるモチベーションになります！できれば有効のままにしてください :)
    # 送信されるデータの例： {"implementation":"bukkit","version":"5.11","mcVersion":"?"}
    # デフォルトは true です。
    metrics: true
    
    # デバッグログ用の設定セクション
    log: {
      # デバッグログが書き込まれるファイルです。
      # コメントアウトするとデバッグログ出力は完全に無効になります。
      # Java の String フォーマット構文を使用して、時間を追加できます。参考：https://docs.oracle.com/javase/8/docs/api/java/util/Formatter.html
      # デフォルトはログ出力なしです。
      file: "bluemap/logs/debug.log"
      #file: "bluemap/logs/debug_%1$tF_%1$tT.log"
    
      # ロガーが既存のファイルに追記するか、上書きするかを指定します。
      # デフォルトは false（上書き）です。
      append: false
    }
  bluemap-sql.conf: |
    ##                          ##
    ##         BlueMap          ##
    ##      Storage-Config      ##
    ##                          ##
    
    # The storage-type of this storage.
    # Depending on this setting, different config-entries are allowed/expected in this config file.
    # Don't change this value! (If you want a different storage-type, check out the other example-configs)
    storage-type: sql
    
    # The JDBC-Connection URL that is used to connect to the database.
    # The format for this url is usually something like: jdbc:[driver]://[host]:[port]/[database]
    # The exact format of the url is determined by the JDBC-Driver you are using.
    connection-url: "jdbc:mysql://localhost:3306/bluemap?permitMysqlScheme"
    
    # You can set any additional (JDBC-Driver-specific) properties here
    # Usually that's your db-user and password
    connection-properties: {
        user: "root",
        password: ""
    }
    
    # The maximum number of connections to the database that are allowed to be open at the same time.
    # A negative number means unlimited.
    # Default is: -1
    max-connections: -1
    
    # This can be used to load a custom jdbc-driver from a .jar file.
    # E.g. if your runtime-environment is not already providing the sql-driver you need,
    # you could download the MariaDB JDBC-Connector from https://mariadb.com/downloads/connectors/connectors-data-access/java8-connector/
    # place it in the './bluemap' folder and use is like this:
    #driver-jar: "bluemap/mariadb-java-client-3.0.7.jar"
    
    # This is the driver-class that bluemap will try to load and use.
    # Check the documentation of the driver you are using if you don't know this.
    # Leaving this commented means that bluemap automatically tries to find a suitable driver in your classpath.
    # (If you added a custom driverJar above, you HAVE TO set the correct class name here)
    #driver-class: "org.mariadb.jdbc.Driver"
    
    # The compression-type that bluemap will use to compress generated map-data.
    # Available compression-types are:
    #  - gzip
    #  - zstd
    #  - deflate
    #  - none
    # The default is: gzip
    compression: gzip
  bluemap-world.conf: |
    ##                          ##
    ##         BlueMap          ##
    ##        Map-Config        ##
    ##                          ##
    
    # The path to the save-folder of the world to render.
    #  (If this is not defined (commented out or removed), the map will be only registered to the web-server and the web-app
    #   but not rendered or loaded by BlueMap. This can be used to display a map that has been rendered somewhere else.)
    world: "world"
    
    # The dimension of the world. Can be "minecraft:overworld", "minecraft:the_nether", "minecraft:the_end"
    # or any dimension-key introduced by a mod or datapack.
    dimension: "minecraft:overworld"
    
    # The display-name of this map -> how this map will be named on the webapp.
    # You can change this at any time.
    # Default is the id of this map
    name: "world (overworld)"
    
    # A lower value makes the map sorted first (in lists and menus), a higher value makes it sorted later.
    # The value needs to be an integer but it can be negative.
    # You can change this at any time.
    # Default is 0
    sorting: 0
    
    # The position on the world where the map will be centered if you open it.
    # You can change this at any time.
    # This defaults to the world-spawn if you don't set it.
    #start-pos: {x:500, z:-820}
    
    # The color of the sky as a hex-color
    # You can change this at any time.
    # Default is "#7dabff"
    sky-color: "#7dabff"
    
    # The color of the void as a hex-color
    # You can change this at any time.
    # Default is "#000000"
    void-color: "#000000"
    
    # Defines the initial sky-light-strength the map will be set to when it is opened.
    # 0 is no sky-light, 1 is fully lighted.
    # You can change this at any time.
    # Default is 1
    sky-light: 1
    
    # Defines the ambient light-strength that every block is receiving, regardless of the sunlight/blocklight.
    # 0 is no ambient light, 1 is fully lighted.
    # You can change this at any time.
    # Default is 0
    ambient-light: 0.1
    
    # BlueMap tries to omit all blocks that are below this Y-level and are not visible from above-ground.
    # More specific: Block-Faces that have a sunlight/skylight value of 0 are removed.
    # This improves the performance of the map on slower devices by a lot, but might cause some blocks to disappear that should normally be visible.
    # Changing this value requires a re-render of the map.
    # Set to a very high value to remove caves everywhere (e.g. 10000)
    # Set to a very low value to remove nothing and render all caves (e.g. -10000)
    # Default is 55 (slightly below water-level)
    remove-caves-below-y: 55
    
    # This is the amount of blocks relative to the "ocean-floor" heightmap that the cave-detection will start at.
    # Everything above that (heightmap-relative) y-level will not be removed.
    # Comment or set to a very high value to disable using the ocean-floor heightmap for cave-detection.
    # Changing this value requires a re-render of the map.
    # Defaults to 10000 (disabled)
    cave-detection-ocean-floor: -5
    
    # With this value set to true, BlueMap also uses the block-light value (additionally to the sky-light) to "detect caves".
    # (See: remove-caves-below-y)
    # Changing this value requires a re-render of the map.
    # Default is false
    cave-detection-uses-block-light: false
    
    # The minimum "inhabitedTime" value that a chunk must have to be rendered.
    # The "inhabitedTime" value of a chunk refers to the cumulative number of ticks players have been near this chunk.
    # If you set this to a value greater than 0, bluemap will only render chunks that players have visited already.
    # Default is 0
    min-inhabited-time: 0
    
    # With the render-mask you can limit the map-render.
    # This can be used to render only a certain part of a world or ignore the nethers ceiling.
    # If you change the render-mask, bluemap automatically tries to update the map,
    # including deleting map-tiles which are outside the new limits.
    # You can use "/bluemap fix-edges <map>" to fix any remaining issues.
    #
    # Please check out the wiki for more detailed information on how to configure this:
    # https://bluemap.bluecolored.de/wiki/customization/Masks.html
    #
    # Default is no mask, bluemap will render everything that exists.
    render-mask: [
      {
        #min-x: -4000
        #max-x: 4000
        #min-z: -4000
        #max-z: 4000
        #min-y: 50
        #max-y: 100
      }
    ]
    
    # Using this, BlueMap pretends that every Block outside of the defined render-mask is AIR,
    # this means you can see the blocks where the world is cut (instead of having a see-through/xray view).
    # This has only an effect if you set some render-mask above.
    # Changing this value requires a re-render of the map.
    # Default is true
    render-edges: true
    
    # The sun-light strength that blocks at map-edges will recieve if render-edges is enabled.
    # Should be a value between 0 and 15
    # Default is 15
    edge-light-strength: 8
    
    # Whether the perspective view will be enabled for this map.
    # Changing this to true requires a re-render of the map, only if the hires-layer is enabled and free-flight view is disabled.
    # Default is true
    enable-perspective-view: true
    
    # Whether the flat (isometric, top-down) view will be enabled for this map.
    # Having only flat-view enabled while disabling free-flight and perspective will speed up the render and reduce the maps storage-size.
    # Default is true
    enable-flat-view: true
    
    # Whether the free-flight view will be enabled for this map.
    # Changing this to true requires a re-render of the map, only if the hires-layer is enabled and perspective view is disabled.
    # Default is true
    enable-free-flight-view: true
    
    # Whether the hires-layer will be enabled.
    # Disabling this will speed up rendering and reduce the size of the map-files a lot.
    # But you will not be able to see the full 3d-models if you zoom in on the map.
    # Changing this to false will not remove any existing tiles, existing tiles just won't get updated anymore.
    # Changing this to true will require a re-render of the map.
    # Default is true
    enable-hires: true
    
    # This defines the storage-config that will be used to save this map.
    # You can find your storage configs next to this config file in the 'storages'-folder.
    # Changing this value requires a re-render of the map. The map in the old storage will not be deleted.
    # Default is "file"
    storage: "file"
    
    # Normally BlueMap detects if a chunk has not yet generated it's light-data and omits rendering those chunks.
    # If this is set to true BlueMap will render Chunks even if there is no light-data!
    # This can be useful for example if some mod prevents light-data from being saved correctly.
    # However, this also has a few drawbacks:
    # - For those chunks, every block will always be fully lit
    # - Night-mode might not work correctly
    # - Caves will always be rendered (ignoring the 'renderCaves' setting)
    # Default is false
    ignore-missing-light-data: false
    
    # Here you can define any static marker-sets with markers that should be displayed on the map.
    # You can change this at any time.
    # If you need dynamic markers, you can use any plugin that integrates with BlueMap's API.
    # Here is a list: https://bluemap.bluecolored.de/community/3rdPartySupport.html
    marker-sets: {
    
      # Please check out the wiki for information on how to configure this:
      # https://bluemap.bluecolored.de/wiki/customization/Markers.html
    
    }
  bluemap-world_nether.conf: |
    ##                          ##
    ##         BlueMap          ##
    ##        Map-Config        ##
    ##                          ##
    
    # The path to the save-folder of the world to render.
    #  (If this is not defined (commented out or removed), the map will be only registered to the web-server and the web-app
    #   but not rendered or loaded by BlueMap. This can be used to display a map that has been rendered somewhere else.)
    world: "world_nether"
    
    # The dimension of the world. Can be "minecraft:overworld", "minecraft:the_nether", "minecraft:the_end"
    # or any dimension-key introduced by a mod or datapack.
    dimension: "minecraft:the_nether"
    
    # The display-name of this map -> how this map will be named on the webapp.
    # You can change this at any time.
    # Default is the id of this map
    name: "world_nether (the_nether)"
    
    # A lower value makes the map sorted first (in lists and menus), a higher value makes it sorted later.
    # The value needs to be an integer but it can be negative.
    # You can change this at any time.
    # Default is 0
    sorting: 100
    
    # The position on the world where the map will be centered if you open it.
    # You can change this at any time.
    # This defaults to the world-spawn if you don't set it.
    #start-pos: {x:500, z:-820}
    
    # The color of the sky as a hex-color
    # You can change this at any time.
    # Default is "#7dabff"
    sky-color: "#290000"
    
    # The color of the void as a hex-color
    # You can change this at any time.
    # Default is "#000000"
    void-color: "#150000"
    
    # Defines the initial sky-light-strength the map will be set to when it is opened.
    # 0 is no sky-light, 1 is fully lighted.
    # You can change this at any time.
    # Default is 1
    sky-light: 1
    
    # Defines the ambient light-strength that every block is receiving, regardless of the sunlight/blocklight.
    # 0 is no ambient light, 1 is fully lighted.
    # You can change this at any time.
    # Default is 0
    ambient-light: 0.6
    
    # BlueMap tries to omit all blocks that are below this Y-level and are not visible from above-ground.
    # More specific: Block-Faces that have a sunlight/skylight value of 0 are removed.
    # This improves the performance of the map on slower devices by a lot, but might cause some blocks to disappear that should normally be visible.
    # Changing this value requires a re-render of the map.
    # Set to a very high value to remove caves everywhere (e.g. 10000)
    # Set to a very low value to remove nothing and render all caves (e.g. -10000)
    # Default is 55 (slightly below water-level)
    remove-caves-below-y: -10000
    
    # This is the amount of blocks relative to the "ocean-floor" heightmap that the cave-detection will start at.
    # Everything above that (heightmap-relative) y-level will not be removed.
    # Comment or set to a very high value to disable using the ocean-floor heightmap for cave-detection.
    # Changing this value requires a re-render of the map.
    # Defaults to 10000 (disabled)
    cave-detection-ocean-floor: -5
    
    # With this value set to true, BlueMap also uses the block-light value (additionally to the sky-light) to "detect caves".
    # (See: remove-caves-below-y)
    # Changing this value requires a re-render of the map.
    # Default is false
    cave-detection-uses-block-light: false
    
    # The minimum "inhabitedTime" value that a chunk must have to be rendered.
    # The "inhabitedTime" value of a chunk refers to the cumulative number of ticks players have been near this chunk.
    # If you set this to a value greater than 0, bluemap will only render chunks that players have visited already.
    # Default is 0
    min-inhabited-time: 0
    
    # With the render-mask you can limit the map-render.
    # This can be used to render only a certain part of a world or ignore the nethers ceiling.
    # If you change the render-mask, bluemap automatically tries to update the map,
    # including deleting map-tiles which are outside the new limits.
    # You can use "/bluemap fix-edges <map>" to fix any remaining issues.
    #
    # Please check out the wiki for more detailed information on how to configure this:
    # https://bluemap.bluecolored.de/wiki/customization/Masks.html
    #
    # Default is no mask, bluemap will render everything that exists.
    render-mask: [
      {
        #min-x: -4000
        #max-x: 4000
        #min-z: -4000
        #max-z: 4000
        #min-y: 50
        #max-y: 100
      }
      {
        # this removes everything at and between y 90 and 127 (the nethers ceiling)
        # structures above the bedrock-ceiling remain visible
        subtract: true
        min-y: 90
        max-y: 127
      }
    ]
    
    # Using this, BlueMap pretends that every Block outside of the defined render-mask is AIR,
    # this means you can see the blocks where the world is cut (instead of having a see-through/xray view).
    # This has only an effect if you set some render-mask above.
    # Changing this value requires a re-render of the map.
    # Default is true
    render-edges: true
    
    # The sun-light strength that blocks at map-edges will recieve if render-edges is enabled.
    # Should be a value between 0 and 15
    # Default is 15
    edge-light-strength: 8
    
    # Whether the perspective view will be enabled for this map.
    # Changing this to true requires a re-render of the map, only if the hires-layer is enabled and free-flight view is disabled.
    # Default is true
    enable-perspective-view: true
    
    # Whether the flat (isometric, top-down) view will be enabled for this map.
    # Having only flat-view enabled while disabling free-flight and perspective will speed up the render and reduce the maps storage-size.
    # Default is true
    enable-flat-view: true
    
    # Whether the free-flight view will be enabled for this map.
    # Changing this to true requires a re-render of the map, only if the hires-layer is enabled and perspective view is disabled.
    # Default is true
    enable-free-flight-view: true
    
    # Whether the hires-layer will be enabled.
    # Disabling this will speed up rendering and reduce the size of the map-files a lot.
    # But you will not be able to see the full 3d-models if you zoom in on the map.
    # Changing this to false will not remove any existing tiles, existing tiles just won't get updated anymore.
    # Changing this to true will require a re-render of the map.
    # Default is true
    enable-hires: true
    
    # This defines the storage-config that will be used to save this map.
    # You can find your storage configs next to this config file in the 'storages'-folder.
    # Changing this value requires a re-render of the map. The map in the old storage will not be deleted.
    # Default is "file"
    storage: "file"
    
    # Normally BlueMap detects if a chunk has not yet generated it's light-data and omits rendering those chunks.
    # If this is set to true BlueMap will render Chunks even if there is no light-data!
    # This can be useful for example if some mod prevents light-data from being saved correctly.
    # However, this also has a few drawbacks:
    # - For those chunks, every block will always be fully lit
    # - Night-mode might not work correctly
    # - Caves will always be rendered (ignoring the 'renderCaves' setting)
    # Default is false
    ignore-missing-light-data: false
    
    # Here you can define any static marker-sets with markers that should be displayed on the map.
    # You can change this at any time.
    # If you need dynamic markers, you can use any plugin that integrates with BlueMap's API.
    # Here is a list: https://bluemap.bluecolored.de/community/3rdPartySupport.html
    marker-sets: {
    
      # Please check out the wiki for information on how to configure this:
      # https://bluemap.bluecolored.de/wiki/customization/Markers.html
    
    }
  bluemap-world_the_end.conf: |
    ##                          ##
    ##         BlueMap          ##
    ##        Map-Config        ##
    ##                          ##
    
    # The path to the save-folder of the world to render.
    #  (If this is not defined (commented out or removed), the map will be only registered to the web-server and the web-app
    #   but not rendered or loaded by BlueMap. This can be used to display a map that has been rendered somewhere else.)
    world: "world_the_end"
    
    # The dimension of the world. Can be "minecraft:overworld", "minecraft:the_nether", "minecraft:the_end"
    # or any dimension-key introduced by a mod or datapack.
    dimension: "minecraft:the_end"
    
    # The display-name of this map -> how this map will be named on the webapp.
    # You can change this at any time.
    # Default is the id of this map
    name: "world_the_end (the_end)"
    
    # A lower value makes the map sorted first (in lists and menus), a higher value makes it sorted later.
    # The value needs to be an integer but it can be negative.
    # You can change this at any time.
    # Default is 0
    sorting: 200
    
    # The position on the world where the map will be centered if you open it.
    # You can change this at any time.
    # This defaults to the world-spawn if you don't set it.
    #start-pos: {x:500, z:-820}
    
    # The color of the sky as a hex-color
    # You can change this at any time.
    # Default is "#7dabff"
    sky-color: "#080010"
    
    # The color of the void as a hex-color
    # You can change this at any time.
    # Default is "#000000"
    void-color: "#080010"
    
    # Defines the initial sky-light-strength the map will be set to when it is opened.
    # 0 is no sky-light, 1 is fully lighted.
    # You can change this at any time.
    # Default is 1
    sky-light: 1
    
    # Defines the ambient light-strength that every block is receiving, regardless of the sunlight/blocklight.
    # 0 is no ambient light, 1 is fully lighted.
    # You can change this at any time.
    # Default is 0
    ambient-light: 0.6
    
    # BlueMap tries to omit all blocks that are below this Y-level and are not visible from above-ground.
    # More specific: Block-Faces that have a sunlight/skylight value of 0 are removed.
    # This improves the performance of the map on slower devices by a lot, but might cause some blocks to disappear that should normally be visible.
    # Changing this value requires a re-render of the map.
    # Set to a very high value to remove caves everywhere (e.g. 10000)
    # Set to a very low value to remove nothing and render all caves (e.g. -10000)
    # Default is 55 (slightly below water-level)
    remove-caves-below-y: -10000
    
    # This is the amount of blocks relative to the "ocean-floor" heightmap that the cave-detection will start at.
    # Everything above that (heightmap-relative) y-level will not be removed.
    # Comment or set to a very high value to disable using the ocean-floor heightmap for cave-detection.
    # Changing this value requires a re-render of the map.
    # Defaults to 10000 (disabled)
    cave-detection-ocean-floor: -5
    
    # With this value set to true, BlueMap also uses the block-light value (additionally to the sky-light) to "detect caves".
    # (See: remove-caves-below-y)
    # Changing this value requires a re-render of the map.
    # Default is false
    cave-detection-uses-block-light: false
    
    # The minimum "inhabitedTime" value that a chunk must have to be rendered.
    # The "inhabitedTime" value of a chunk refers to the cumulative number of ticks players have been near this chunk.
    # If you set this to a value greater than 0, bluemap will only render chunks that players have visited already.
    # Default is 0
    min-inhabited-time: 0
    
    # With the render-mask you can limit the map-render.
    # This can be used to render only a certain part of a world or ignore the nethers ceiling.
    # If you change the render-mask, bluemap automatically tries to update the map,
    # including deleting map-tiles which are outside the new limits.
    # You can use "/bluemap fix-edges <map>" to fix any remaining issues.
    #
    # Please check out the wiki for more detailed information on how to configure this:
    # https://bluemap.bluecolored.de/wiki/customization/Masks.html
    #
    # Default is no mask, bluemap will render everything that exists.
    render-mask: [
      {
        #min-x: -4000
        #max-x: 4000
        #min-z: -4000
        #max-z: 4000
        #min-y: 50
        #max-y: 100
      }
    ]
    
    # Using this, BlueMap pretends that every Block outside of the defined render-mask is AIR,
    # this means you can see the blocks where the world is cut (instead of having a see-through/xray view).
    # This has only an effect if you set some render-mask above.
    # Changing this value requires a re-render of the map.
    # Default is true
    render-edges: true
    
    # The sun-light strength that blocks at map-edges will recieve if render-edges is enabled.
    # Should be a value between 0 and 15
    # Default is 15
    edge-light-strength: 8
    
    # Whether the perspective view will be enabled for this map.
    # Changing this to true requires a re-render of the map, only if the hires-layer is enabled and free-flight view is disabled.
    # Default is true
    enable-perspective-view: true
    
    # Whether the flat (isometric, top-down) view will be enabled for this map.
    # Having only flat-view enabled while disabling free-flight and perspective will speed up the render and reduce the maps storage-size.
    # Default is true
    enable-flat-view: true
    
    # Whether the free-flight view will be enabled for this map.
    # Changing this to true requires a re-render of the map, only if the hires-layer is enabled and perspective view is disabled.
    # Default is true
    enable-free-flight-view: true
    
    # Whether the hires-layer will be enabled.
    # Disabling this will speed up rendering and reduce the size of the map-files a lot.
    # But you will not be able to see the full 3d-models if you zoom in on the map.
    # Changing this to false will not remove any existing tiles, existing tiles just won't get updated anymore.
    # Changing this to true will require a re-render of the map.
    # Default is true
    enable-hires: true
    
    # This defines the storage-config that will be used to save this map.
    # You can find your storage configs next to this config file in the 'storages'-folder.
    # Changing this value requires a re-render of the map. The map in the old storage will not be deleted.
    # Default is "file"
    storage: "file"
    
    # Normally BlueMap detects if a chunk has not yet generated it's light-data and omits rendering those chunks.
    # If this is set to true BlueMap will render Chunks even if there is no light-data!
    # This can be useful for example if some mod prevents light-data from being saved correctly.
    # However, this also has a few drawbacks:
    # - For those chunks, every block will always be fully lit
    # - Night-mode might not work correctly
    # - Caves will always be rendered (ignoring the 'renderCaves' setting)
    # Default is false
    ignore-missing-light-data: false
    
    # Here you can define any static marker-sets with markers that should be displayed on the map.
    # You can change this at any time.
    # If you need dynamic markers, you can use any plugin that integrates with BlueMap's API.
    # Here is a list: https://bluemap.bluecolored.de/community/3rdPartySupport.html
    marker-sets: {
    
      # Please check out the wiki for information on how to configure this:
      # https://bluemap.bluecolored.de/wiki/customization/Markers.html
    
    }
